## Dynamic Configuration
# by: Erivando Sena | DevOps/SRE | UNILAB
# dynamic-conf.yml

http:
  ################################################
  # ROUTERS
  ################################################
  routers:
    # Producao
    api-prod:
      entrypoints:
        - web
      service: api-prod_file
      rule: Host(`{{env "DOMAINNAME_PRODUCAO"}}`)

    app-prod:
      entrypoints:
        - web
      middlewares:
        - app_stripprefix
      service: app-prod_file
      rule: Host(`{{env "DOMAINNAME_PRODUCAO"}}`) && PathPrefix(`/`)

    gateway-prod:
      entrypoints:
        - web
      middlewares:
        - gateway_stripprefix
      service: gateway-prod_file
      rule: Host(`{{env "DOMAINNAME_PRODUCAO"}}`) && PathPrefix(`/gateway`)

    # Treinamento
    api-train:
      entrypoints:
        - web
      service: api-train_file
      rule: Host(`{{env "DOMAINNAME_TREINAMENTO"}}`)

    app-train:
      entrypoints:
        - web
      middlewares:
        - app_stripprefix
      service: app-train_file
      rule: Host(`{{env "DOMAINNAME_TREINAMENTO"}}`) && PathPrefix(`/`)

    gateway-train:
      entrypoints:
        - web
      middlewares:
        - gateway_stripprefix
      service: gateway-train_file
      rule: Host(`{{env "DOMAINNAME_TREINAMENTO"}}`) && PathPrefix(`/gateway`)

    # Staging
    api-staging:
      entrypoints:
        - web
      service: api-staging_file
      rule: Host(`{{env "DOMAINNAME_STAGING"}}`)

    app-staging:
      entrypoints:
        - web
      middlewares:
        - app_stripprefix
      service: app-staging_file
      rule: Host(`{{env "DOMAINNAME_STAGING"}}`) && PathPrefix(`/`)

    gateway-staging:
      entrypoints:
        - web
      middlewares:
        - gateway_stripprefix
      service: gateway-staging_file
      rule: Host(`{{env "DOMAINNAME_STAGING"}}`) && PathPrefix(`/gateway`)

    # Api Traefik
    dashboard:
      rule: Host(`{{env "DOMAINNAME_DASHBOARD_TRAEFIK"}}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      service: api@internal
      middlewares:
        - auth

  ################################################
  # SERVICES
  ################################################
  services:
    # producao
    api-prod_file:
      loadBalancer:
        servers:
        - url: http://api-prod/
        passHostHeader: false

    app-prod_file:
      loadBalancer:
        servers:
        - url: http://app-prod/
        passHostHeader: false

    gateway-prod_file:
      loadBalancer:
        servers:
        - url: http://gateway-prod/
        passHostHeader: false

    # Treinamento
    api-train_file:
      loadBalancer:
        servers:
        - url: http://api-train/
        passHostHeader: false

    app-train_file:
      loadBalancer:
        servers:
        - url: http://app-train/
        passHostHeader: false

    gateway-train_file:
      loadBalancer:
        servers:
        - url: http://gateway-train/
        passHostHeader: false

    # Staging
    api-staging_file:
      loadBalancer:
        servers:
        - url: http://api-staging/
        passHostHeader: false

    app-staging_file:
      loadBalancer:
        servers:
        - url: http://app-staging/
        passHostHeader: false

    gateway-staging_file:
      loadBalancer:
        servers:
        - url: http://gateway-staging/
        passHostHeader: false

  ################################################
  # MIDDLEWARES
  ################################################
  middlewares:
    # traefik
    auth:
      basicAuth:
        users:
          - "test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/"
          - "test2:$apr1$d9hr9HBB$4HxwgUir3HP4EsggP/QNo0"

    # production/train/staging
    gateway_stripprefix:
      stripPrefix:
        prefixes:
          - "/gateway/"
    # production/train/staging
    app_stripprefix:
      stripPrefix:
        prefixes:
          - "/safe/sisgp/programagestao/app/"

tls:
  # Especificando certificado que será usado para solicitações correspondentes
  # certificates:
  #   - certFile: /etc/certs/selfsigned-crt.pem
  #     keyFile: /etc/certs/selfsigned-key.pem
  #     stores:
  #       - default
  # Especificando o certificado padrão
  # stores:
  #   default:
  #     defaultCertificate:
  #       certFile: /etc/certs/selfsigned.cert
  #       keyFile: /etc/certs/selfsigned.key
  options:
    default:
      minVersion: VersionTLS12
      cipherSuites:
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
        - TLS_AES_128_GCM_SHA256
        - TLS_AES_256_GCM_SHA384
        - TLS_CHACHA20_POLY1305_SHA256
    mintls13:
      minVersion: VersionTLS13